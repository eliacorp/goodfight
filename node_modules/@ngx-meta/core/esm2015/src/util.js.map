{
  "version": 3,
  "file": "util.js",
  "sources": [
    "ng://@ngx-meta/core/packages/@ngx-meta/core/src/util.ts"
  ],
  "sourcesContent": [
    "// libs\r\nimport { Observable } from 'rxjs';\r\n// TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\r\n// import { $$observable as symbolObservable } from 'rxjs/symbol/observable';\r\n\r\nexport function isPromise(obj: any): obj is Promise<any> {\r\n  return !!obj && typeof obj.then === 'function';\r\n}\r\n\r\nexport function isObservable(obj: any | Observable<any>): obj is Observable<any> {\r\n  // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\r\n  // return !!(obj && obj[symbolObservable]);\r\n  return !!obj && typeof obj.subscribe === 'function';\r\n}\r\n"
  ],
  "names": [],
  "mappings": "AAKA,MAAM,oBAAoB,GAAQ;IAChC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,GAAG,CAAC,IAAI,KAAK,UAAU,CAAC;CAChD;AAED,MAAM,uBAAuB,GAA0B;IAGrD,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,GAAG,CAAC,SAAS,KAAK,UAAU,CAAC;CACrD"
}
