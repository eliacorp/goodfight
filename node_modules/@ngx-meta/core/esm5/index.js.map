{
  "version": 3,
  "file": "index.js",
  "sources": [
    "ng://@ngx-meta/core/packages/@ngx-meta/core/index.ts"
  ],
  "sourcesContent": [
    "// angular\r\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\n\r\n// module\r\nimport { MetaGuard } from './src/meta.guard';\r\nimport { MetaLoader, MetaStaticLoader } from './src/meta.loader';\r\nimport { MetaService } from './src/meta.service';\r\n\r\nexport * from './src/models/meta-settings';\r\nexport * from './src/models/page-title-positioning';\r\nexport * from './src/meta.guard';\r\nexport * from './src/meta.loader';\r\nexport * from './src/meta.service';\r\n\r\n// for AoT compilation\r\nexport function metaFactory(): MetaLoader {\r\n  return new MetaStaticLoader();\r\n}\r\n\r\n@NgModule()\r\nexport class MetaModule {\r\n  static forRoot(configuredProvider: any = {\r\n    provide: MetaLoader,\r\n    useFactory: (metaFactory)\r\n  }): ModuleWithProviders {\r\n    return {\r\n      ngModule: MetaModule,\r\n      providers: [\r\n        configuredProvider,\r\n        MetaGuard,\r\n        MetaService\r\n      ]\r\n    };\r\n  }\r\n\r\n  constructor(@Optional() @SkipSelf() parentModule: MetaModule) {\r\n    if (parentModule)\r\n      throw new Error('MetaModule already loaded; import in root module only.');\r\n  }\r\n}\r\n"
  ],
  "names": [],
  "mappings": "AACA,OAAO,EAAuB,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAGlF,OAAO,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;AAC7C,OAAO,EAAE,UAAU,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAC;AACjE,OAAO,EAAE,WAAW,EAAE,MAAM,oBAAoB,CAAC;AAGjD,cAAc,qCAAqC,CAAC;AACpD,cAAc,kBAAkB,CAAC;AACjC,cAAc,mBAAmB,CAAC;AAClC,cAAc,oBAAoB,CAAC;AAGnC,MAAM;IACJ,MAAM,CAAC,IAAI,gBAAgB,EAAE,CAAC;CAC/B;AAGD,MAAM;IAeJ,YAAoC;QAClC,EAAE,CAAC,CAAC,YAAY,CAAC;YACf,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;KAC7E;IAjBD,MAAM,CAAC,OAAO,CAAC,qBAA0B;QACvC,OAAO,EAAE,UAAU;QACnB,UAAU,EAAE,CAAC,WAAW,CAAC;KAC1B;QACC,MAAM,CAAC;YACL,QAAQ,EAAE,UAAU;YACpB,SAAS,EAAE;gBACT,kBAAkB;gBAClB,SAAS;gBACT,WAAW;aACZ;SACF,CAAC;KACH;;;YAdF,QAAQ;;;YACI,UAAU,uBAeR,QAAQ,YAAI,QAAQ"
}
