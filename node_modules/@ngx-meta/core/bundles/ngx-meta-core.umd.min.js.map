{
  "version": 3,
  "file": "ngx-meta-core.umd.min.js",
  "sources": [
    "ng://@ngx-meta/core/packages/@ngx-meta/core/src/models/page-title-positioning.ts",
    "ng://@ngx-meta/core/packages/@ngx-meta/core/src/meta.loader.ts",
    "ng://@ngx-meta/core/packages/@ngx-meta/core/src/meta.service.ts",
    "ng://@ngx-meta/core/packages/@ngx-meta/core/src/util.ts",
    "ng://@ngx-meta/core/packages/@ngx-meta/core/src/meta.guard.ts",
    "ng://@ngx-meta/core/packages/@ngx-meta/core/index.ts"
  ],
  "sourcesContent": [
    "export enum PageTitlePositioning {\r\n  /**\r\n   * append page title after application name\r\n   */\r\n  AppendPageTitle = 0,\r\n  /**\r\n   * prepend page title before application name\r\n   */\r\n  PrependPageTitle = 10\r\n}\r\n",
    "// module\r\nimport { PageTitlePositioning } from './models/page-title-positioning';\r\nimport { MetaSettings } from './models/meta-settings';\r\n\r\nexport abstract class MetaLoader {\r\n  abstract get settings(): MetaSettings;\r\n}\r\n\r\nexport class MetaStaticLoader implements MetaLoader {\r\n  get settings(): MetaSettings {\r\n    return this.providedSettings;\r\n  }\r\n\r\n  constructor(private readonly providedSettings: MetaSettings = {\r\n    pageTitlePositioning: PageTitlePositioning.PrependPageTitle,\r\n    defaults: {}\r\n  }) {\r\n  }\r\n}\r\n",
    "// angular\r\nimport { Injectable } from '@angular/core';\r\nimport { Meta, Title } from '@angular/platform-browser';\r\n\r\n// libs\r\nimport { from as observableFrom, Observable, of as observableOf } from 'rxjs';\r\n\r\n// module\r\nimport { PageTitlePositioning } from './models/page-title-positioning';\r\nimport { MetaLoader } from './meta.loader';\r\nimport { isObservable, isPromise } from './util';\r\nimport { MetaSettings } from './models/meta-settings';\r\n\r\n@Injectable()\r\nexport class MetaService {\r\n  protected readonly settings: MetaSettings;\r\n  private readonly isMetaTagSet: any;\r\n\r\n  constructor(readonly loader: MetaLoader,\r\n              private readonly title: Title,\r\n              private readonly meta: Meta) {\r\n    this.settings = loader.settings;\r\n    this.isMetaTagSet = {};\r\n  }\r\n\r\n  setTitle(title: string, override = false): void {\r\n    const title$ = title\r\n      ? this.callback(title)\r\n      : observableOf('');\r\n\r\n    title$\r\n      .subscribe((res: string) => {\r\n        let fullTitle = '';\r\n\r\n        if (!res) {\r\n          const defaultTitle$ = (this.settings.defaults && this.settings.defaults['title'])\r\n            ? this.callback(this.settings.defaults['title'])\r\n            : observableOf('');\r\n\r\n          defaultTitle$\r\n            .subscribe((defaultTitle: string) => {\r\n              if (!override && this.settings.pageTitleSeparator && this.settings.applicationName)\r\n                this.callback(this.settings.applicationName)\r\n                  .subscribe((applicationName: string) => {\r\n                    fullTitle = applicationName ? this.getTitleWithPositioning(defaultTitle, applicationName) : defaultTitle;\r\n                    this.updateTitle(fullTitle);\r\n                  });\r\n              else\r\n                this.updateTitle(defaultTitle);\r\n            });\r\n        } else if (!override && this.settings.pageTitleSeparator && this.settings.applicationName)\r\n          this.callback(this.settings.applicationName)\r\n            .subscribe((applicationName: string) => {\r\n              fullTitle = applicationName ? this.getTitleWithPositioning(res, applicationName) : res;\r\n              this.updateTitle(fullTitle);\r\n            });\r\n        else\r\n          this.updateTitle(res);\r\n      });\r\n  }\r\n\r\n  setTag(key: string, value: string): void {\r\n    if (key === 'title')\r\n      throw new Error(`Attempt to set ${key} through \"setTag\": \"title\" is a reserved tag name. `\r\n        + 'Please use `MetaService.setTitle` instead.');\r\n\r\n    value = value || ((this.settings.defaults && this.settings.defaults[key])\r\n      ? this.settings.defaults[key]\r\n      : '');\r\n\r\n    const value$ = (key !== 'og:locale' && key !== 'og:locale:alternate')\r\n      ? this.callback(value)\r\n      : observableOf(value);\r\n\r\n    value$\r\n      .subscribe((res: string) => {\r\n        this.updateTag(key, res);\r\n      });\r\n  }\r\n\r\n  update(currentUrl: string, metaSettings?: any): void {\r\n    if (!metaSettings) {\r\n      const fallbackTitle = this.settings.defaults\r\n        ? (this.settings.defaults['title'] || this.settings['applicationName'])\r\n        : this.settings['applicationName'];\r\n\r\n      this.setTitle(fallbackTitle, true);\r\n    } else {\r\n      if (metaSettings.disabled) {\r\n        this.update(currentUrl);\r\n\r\n        return;\r\n      }\r\n\r\n      this.setTitle(metaSettings.title, metaSettings.override);\r\n\r\n      Object.keys(metaSettings)\r\n        .forEach(key => {\r\n          let value = metaSettings[key];\r\n\r\n          if (key === 'title' || key === 'override')\r\n            return;\r\n          else if (key === 'og:locale')\r\n            value = value.replace(/-/g, '_');\r\n          else if (key === 'og:locale:alternate') {\r\n            const currentLocale = metaSettings['og:locale'];\r\n            this.updateLocales(currentLocale, metaSettings[key]);\r\n\r\n            return;\r\n          }\r\n\r\n          this.setTag(key, value);\r\n        });\r\n    }\r\n\r\n    if (this.settings.defaults)\r\n      Object.keys(this.settings.defaults)\r\n        .forEach(key => {\r\n          let value = this.settings.defaults[key];\r\n\r\n          if ((metaSettings && (key in this.isMetaTagSet || key in metaSettings)) || key === 'title' || key === 'override')\r\n            return;\r\n          else if (key === 'og:locale')\r\n            value = value.replace(/-/g, '_');\r\n          else if (key === 'og:locale:alternate') {\r\n            const currentLocale = metaSettings ? metaSettings['og:locale'] : undefined;\r\n            this.updateLocales(currentLocale, value);\r\n\r\n            return;\r\n          }\r\n\r\n          this.setTag(key, value);\r\n        });\r\n\r\n    const url = ((this.settings.applicationUrl || '/') + currentUrl)\r\n      .replace(/(https?:\\/\\/)|(\\/)+/g, '$1$2')\r\n      .replace(/\\/$/g, '');\r\n\r\n    this.setTag('og:url', url || '/');\r\n  }\r\n\r\n  removeTag(key: string): void {\r\n    this.meta.removeTag(key);\r\n  }\r\n\r\n  private callback(value: string): Observable<string> {\r\n    if (this.settings.callback) {\r\n      const value$ = this.settings.callback(value);\r\n\r\n      if (!isObservable(value$))\r\n        return isPromise(value$)\r\n          ? observableFrom(value$)\r\n          : observableOf(value$);\r\n\r\n      return value$;\r\n    }\r\n\r\n    return observableOf(value);\r\n  }\r\n\r\n  private getTitleWithPositioning(title: string, applicationName: string): string {\r\n    switch (this.settings.pageTitlePositioning) {\r\n      case PageTitlePositioning.AppendPageTitle:\r\n        return applicationName + this.settings.pageTitleSeparator + title;\r\n      case PageTitlePositioning.PrependPageTitle:\r\n        return title + this.settings.pageTitleSeparator + applicationName;\r\n      default:\r\n        throw new Error(`Invalid pageTitlePositioning specified [${this.settings.pageTitlePositioning}]!`);\r\n    }\r\n  }\r\n\r\n  private updateTitle(title: string): void {\r\n    this.title.setTitle(title);\r\n    this.meta.updateTag({\r\n      property: 'og:title',\r\n      content: title\r\n    });\r\n  }\r\n\r\n  private updateLocales(currentLocale: string, availableLocales: string): void {\r\n    currentLocale = currentLocale || (this.settings.defaults\r\n      ? this.settings.defaults['og:locale']\r\n      : '');\r\n\r\n    if (currentLocale && this.settings.defaults)\r\n      this.settings.defaults['og:locale'] = currentLocale.replace(/_/g, '-');\r\n\r\n    // TODO: set HTML lang attribute - https://github.com/ngx-meta/core/issues/32\r\n    // const html = this.document.querySelector('html');\r\n    // html.setAttribute('lang', currentLocale);\r\n\r\n    const elements = this.meta.getTags('property=\"og:locale:alternate\"');\r\n\r\n    elements.forEach((element: any) => {\r\n      this.meta.removeTagElement(element);\r\n    });\r\n\r\n    if (currentLocale && availableLocales)\r\n      availableLocales.split(',')\r\n        .forEach((locale: string) => {\r\n          if (currentLocale.replace(/-/g, '_') !== locale.replace(/-/g, '_'))\r\n            this.meta.addTag({\r\n              property: 'og:locale:alternate',\r\n              content: locale.replace(/-/g, '_')\r\n            });\r\n        });\r\n  }\r\n\r\n  private updateTag(key: string, value: string): void {\r\n    if (key.lastIndexOf('og:', 0) === 0)\r\n      this.meta.updateTag({\r\n        property: key,\r\n        content: key === 'og:locale' ? value.replace(/-/g, '_') : value\r\n      });\r\n    else\r\n      this.meta.updateTag({\r\n        name: key,\r\n        content: value\r\n      });\r\n\r\n    this.isMetaTagSet[key] = true;\r\n\r\n    if (key === 'description')\r\n      this.meta.updateTag({\r\n        property: 'og:description',\r\n        content: value\r\n      });\r\n    else if (key === 'author')\r\n      this.meta.updateTag({\r\n        property: 'og:author',\r\n        content: value\r\n      });\r\n    else if (key === 'publisher')\r\n      this.meta.updateTag({\r\n        property: 'og:publisher',\r\n        content: value\r\n      });\r\n    else if (key === 'og:locale') {\r\n      const availableLocales = this.settings.defaults\r\n        ? this.settings.defaults['og:locale:alternate']\r\n        : '';\r\n\r\n      this.updateLocales(value, availableLocales);\r\n      this.isMetaTagSet['og:locale:alternate'] = true;\r\n    } else if (key === 'og:locale:alternate') {\r\n      const currentLocale = this.meta.getTag('property=\"og:locale\"').content;\r\n\r\n      this.updateLocales(currentLocale, value);\r\n      this.isMetaTagSet['og:locale'] = true;\r\n    }\r\n  }\r\n}\r\n",
    "// libs\r\nimport { Observable } from 'rxjs';\r\n// TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\r\n// import { $$observable as symbolObservable } from 'rxjs/symbol/observable';\r\n\r\nexport function isPromise(obj: any): obj is Promise<any> {\r\n  return !!obj && typeof obj.then === 'function';\r\n}\r\n\r\nexport function isObservable(obj: any | Observable<any>): obj is Observable<any> {\r\n  // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\r\n  // return !!(obj && obj[symbolObservable]);\r\n  return !!obj && typeof obj.subscribe === 'function';\r\n}\r\n",
    "// angular\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, RouterStateSnapshot } from '@angular/router';\r\n\r\n// module\r\nimport { MetaService } from './meta.service';\r\n\r\n@Injectable()\r\nexport class MetaGuard implements CanActivate, CanActivateChild {\r\n  constructor(private readonly meta: MetaService) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    const url = state.url;\r\n\r\n    const metaSettings = (route && route.data && route.data['meta'])\r\n      ? route.data['meta']\r\n      : undefined;\r\n\r\n    this.meta.update(url, metaSettings);\r\n\r\n    return true;\r\n  }\r\n\r\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    return this.canActivate(route, state);\r\n  }\r\n}\r\n",
    "// angular\r\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\n\r\n// module\r\nimport { MetaGuard } from './src/meta.guard';\r\nimport { MetaLoader, MetaStaticLoader } from './src/meta.loader';\r\nimport { MetaService } from './src/meta.service';\r\n\r\nexport * from './src/models/meta-settings';\r\nexport * from './src/models/page-title-positioning';\r\nexport * from './src/meta.guard';\r\nexport * from './src/meta.loader';\r\nexport * from './src/meta.service';\r\n\r\n// for AoT compilation\r\nexport function metaFactory(): MetaLoader {\r\n  return new MetaStaticLoader();\r\n}\r\n\r\n@NgModule()\r\nexport class MetaModule {\r\n  static forRoot(configuredProvider: any = {\r\n    provide: MetaLoader,\r\n    useFactory: (metaFactory)\r\n  }): ModuleWithProviders {\r\n    return {\r\n      ngModule: MetaModule,\r\n      providers: [\r\n        configuredProvider,\r\n        MetaGuard,\r\n        MetaService\r\n      ]\r\n    };\r\n  }\r\n\r\n  constructor(@Optional() @SkipSelf() parentModule: MetaModule) {\r\n    if (parentModule)\r\n      throw new Error('MetaModule already loaded; import in root module only.');\r\n  }\r\n}\r\n"
  ],
  "names": [
    "PageTitlePositioning",
    "MetaLoader",
    "MetaStaticLoader",
    "providedSettings",
    "pageTitlePositioning",
    "PrependPageTitle",
    "defaults",
    "this",
    "MetaService",
    "loader",
    "title",
    "meta",
    "settings",
    "isMetaTagSet",
    "prototype",
    "setTitle",
    "override",
    "_this",
    "callback",
    "observableOf",
    "subscribe",
    "res",
    "fullTitle",
    "pageTitleSeparator",
    "applicationName",
    "getTitleWithPositioning",
    "updateTitle",
    "defaultTitle",
    "setTag",
    "key",
    "value",
    "Error",
    "updateTag",
    "update",
    "currentUrl",
    "metaSettings",
    "disabled",
    "Object",
    "keys",
    "forEach",
    "replace",
    "currentLocale",
    "updateLocales",
    "fallbackTitle",
    "undefined",
    "url",
    "applicationUrl",
    "removeTag",
    "value$",
    "obj",
    "then",
    "observableFrom",
    "AppendPageTitle",
    "property",
    "content",
    "availableLocales",
    "getTags",
    "element",
    "removeTagElement",
    "split",
    "locale",
    "addTag",
    "lastIndexOf",
    "name",
    "MetaGuard",
    "canActivate",
    "route",
    "state",
    "data",
    "canActivateChild",
    "metaFactory",
    "MetaModule",
    "parentModule",
    "forRoot",
    "configuredProvider",
    "provide",
    "useFactory",
    "ngModule",
    "providers",
    "type",
    "NgModule"
  ],
  "mappings": "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"
}
