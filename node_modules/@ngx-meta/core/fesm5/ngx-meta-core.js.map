{
  "version": 3,
  "file": "ngx-meta-core.js",
  "sources": [
    "ng://@ngx-meta/core/packages/@ngx-meta/core/index.ts",
    "ng://@ngx-meta/core/packages/@ngx-meta/core/src/meta.guard.ts",
    "ng://@ngx-meta/core/packages/@ngx-meta/core/src/meta.service.ts",
    "ng://@ngx-meta/core/packages/@ngx-meta/core/src/util.ts",
    "ng://@ngx-meta/core/packages/@ngx-meta/core/src/meta.loader.ts",
    "ng://@ngx-meta/core/packages/@ngx-meta/core/src/models/page-title-positioning.ts"
  ],
  "sourcesContent": [
    "// angular\r\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\n\r\n// module\r\nimport { MetaGuard } from './src/meta.guard';\r\nimport { MetaLoader, MetaStaticLoader } from './src/meta.loader';\r\nimport { MetaService } from './src/meta.service';\r\n\r\nexport * from './src/models/meta-settings';\r\nexport * from './src/models/page-title-positioning';\r\nexport * from './src/meta.guard';\r\nexport * from './src/meta.loader';\r\nexport * from './src/meta.service';\r\n\r\n// for AoT compilation\r\nexport function metaFactory(): MetaLoader {\r\n  return new MetaStaticLoader();\r\n}\r\n\r\n@NgModule()\r\nexport class MetaModule {\r\n  static forRoot(configuredProvider: any = {\r\n    provide: MetaLoader,\r\n    useFactory: (metaFactory)\r\n  }): ModuleWithProviders {\r\n    return {\r\n      ngModule: MetaModule,\r\n      providers: [\r\n        configuredProvider,\r\n        MetaGuard,\r\n        MetaService\r\n      ]\r\n    };\r\n  }\r\n\r\n  constructor(@Optional() @SkipSelf() parentModule: MetaModule) {\r\n    if (parentModule)\r\n      throw new Error('MetaModule already loaded; import in root module only.');\r\n  }\r\n}\r\n",
    "// angular\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, RouterStateSnapshot } from '@angular/router';\r\n\r\n// module\r\nimport { MetaService } from './meta.service';\r\n\r\n@Injectable()\r\nexport class MetaGuard implements CanActivate, CanActivateChild {\r\n  constructor(private readonly meta: MetaService) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    const url = state.url;\r\n\r\n    const metaSettings = (route && route.data && route.data['meta'])\r\n      ? route.data['meta']\r\n      : undefined;\r\n\r\n    this.meta.update(url, metaSettings);\r\n\r\n    return true;\r\n  }\r\n\r\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    return this.canActivate(route, state);\r\n  }\r\n}\r\n",
    "// angular\r\nimport { Injectable } from '@angular/core';\r\nimport { Meta, Title } from '@angular/platform-browser';\r\n\r\n// libs\r\nimport { from as observableFrom, Observable, of as observableOf } from 'rxjs';\r\n\r\n// module\r\nimport { PageTitlePositioning } from './models/page-title-positioning';\r\nimport { MetaLoader } from './meta.loader';\r\nimport { isObservable, isPromise } from './util';\r\nimport { MetaSettings } from './models/meta-settings';\r\n\r\n@Injectable()\r\nexport class MetaService {\r\n  protected readonly settings: MetaSettings;\r\n  private readonly isMetaTagSet: any;\r\n\r\n  constructor(readonly loader: MetaLoader,\r\n              private readonly title: Title,\r\n              private readonly meta: Meta) {\r\n    this.settings = loader.settings;\r\n    this.isMetaTagSet = {};\r\n  }\r\n\r\n  setTitle(title: string, override = false): void {\r\n    const title$ = title\r\n      ? this.callback(title)\r\n      : observableOf('');\r\n\r\n    title$\r\n      .subscribe((res: string) => {\r\n        let fullTitle = '';\r\n\r\n        if (!res) {\r\n          const defaultTitle$ = (this.settings.defaults && this.settings.defaults['title'])\r\n            ? this.callback(this.settings.defaults['title'])\r\n            : observableOf('');\r\n\r\n          defaultTitle$\r\n            .subscribe((defaultTitle: string) => {\r\n              if (!override && this.settings.pageTitleSeparator && this.settings.applicationName)\r\n                this.callback(this.settings.applicationName)\r\n                  .subscribe((applicationName: string) => {\r\n                    fullTitle = applicationName ? this.getTitleWithPositioning(defaultTitle, applicationName) : defaultTitle;\r\n                    this.updateTitle(fullTitle);\r\n                  });\r\n              else\r\n                this.updateTitle(defaultTitle);\r\n            });\r\n        } else if (!override && this.settings.pageTitleSeparator && this.settings.applicationName)\r\n          this.callback(this.settings.applicationName)\r\n            .subscribe((applicationName: string) => {\r\n              fullTitle = applicationName ? this.getTitleWithPositioning(res, applicationName) : res;\r\n              this.updateTitle(fullTitle);\r\n            });\r\n        else\r\n          this.updateTitle(res);\r\n      });\r\n  }\r\n\r\n  setTag(key: string, value: string): void {\r\n    if (key === 'title')\r\n      throw new Error(`Attempt to set ${key} through \"setTag\": \"title\" is a reserved tag name. `\r\n        + 'Please use `MetaService.setTitle` instead.');\r\n\r\n    value = value || ((this.settings.defaults && this.settings.defaults[key])\r\n      ? this.settings.defaults[key]\r\n      : '');\r\n\r\n    const value$ = (key !== 'og:locale' && key !== 'og:locale:alternate')\r\n      ? this.callback(value)\r\n      : observableOf(value);\r\n\r\n    value$\r\n      .subscribe((res: string) => {\r\n        this.updateTag(key, res);\r\n      });\r\n  }\r\n\r\n  update(currentUrl: string, metaSettings?: any): void {\r\n    if (!metaSettings) {\r\n      const fallbackTitle = this.settings.defaults\r\n        ? (this.settings.defaults['title'] || this.settings['applicationName'])\r\n        : this.settings['applicationName'];\r\n\r\n      this.setTitle(fallbackTitle, true);\r\n    } else {\r\n      if (metaSettings.disabled) {\r\n        this.update(currentUrl);\r\n\r\n        return;\r\n      }\r\n\r\n      this.setTitle(metaSettings.title, metaSettings.override);\r\n\r\n      Object.keys(metaSettings)\r\n        .forEach(key => {\r\n          let value = metaSettings[key];\r\n\r\n          if (key === 'title' || key === 'override')\r\n            return;\r\n          else if (key === 'og:locale')\r\n            value = value.replace(/-/g, '_');\r\n          else if (key === 'og:locale:alternate') {\r\n            const currentLocale = metaSettings['og:locale'];\r\n            this.updateLocales(currentLocale, metaSettings[key]);\r\n\r\n            return;\r\n          }\r\n\r\n          this.setTag(key, value);\r\n        });\r\n    }\r\n\r\n    if (this.settings.defaults)\r\n      Object.keys(this.settings.defaults)\r\n        .forEach(key => {\r\n          let value = this.settings.defaults[key];\r\n\r\n          if ((metaSettings && (key in this.isMetaTagSet || key in metaSettings)) || key === 'title' || key === 'override')\r\n            return;\r\n          else if (key === 'og:locale')\r\n            value = value.replace(/-/g, '_');\r\n          else if (key === 'og:locale:alternate') {\r\n            const currentLocale = metaSettings ? metaSettings['og:locale'] : undefined;\r\n            this.updateLocales(currentLocale, value);\r\n\r\n            return;\r\n          }\r\n\r\n          this.setTag(key, value);\r\n        });\r\n\r\n    const url = ((this.settings.applicationUrl || '/') + currentUrl)\r\n      .replace(/(https?:\\/\\/)|(\\/)+/g, '$1$2')\r\n      .replace(/\\/$/g, '');\r\n\r\n    this.setTag('og:url', url || '/');\r\n  }\r\n\r\n  removeTag(key: string): void {\r\n    this.meta.removeTag(key);\r\n  }\r\n\r\n  private callback(value: string): Observable<string> {\r\n    if (this.settings.callback) {\r\n      const value$ = this.settings.callback(value);\r\n\r\n      if (!isObservable(value$))\r\n        return isPromise(value$)\r\n          ? observableFrom(value$)\r\n          : observableOf(value$);\r\n\r\n      return value$;\r\n    }\r\n\r\n    return observableOf(value);\r\n  }\r\n\r\n  private getTitleWithPositioning(title: string, applicationName: string): string {\r\n    switch (this.settings.pageTitlePositioning) {\r\n      case PageTitlePositioning.AppendPageTitle:\r\n        return applicationName + this.settings.pageTitleSeparator + title;\r\n      case PageTitlePositioning.PrependPageTitle:\r\n        return title + this.settings.pageTitleSeparator + applicationName;\r\n      default:\r\n        throw new Error(`Invalid pageTitlePositioning specified [${this.settings.pageTitlePositioning}]!`);\r\n    }\r\n  }\r\n\r\n  private updateTitle(title: string): void {\r\n    this.title.setTitle(title);\r\n    this.meta.updateTag({\r\n      property: 'og:title',\r\n      content: title\r\n    });\r\n  }\r\n\r\n  private updateLocales(currentLocale: string, availableLocales: string): void {\r\n    currentLocale = currentLocale || (this.settings.defaults\r\n      ? this.settings.defaults['og:locale']\r\n      : '');\r\n\r\n    if (currentLocale && this.settings.defaults)\r\n      this.settings.defaults['og:locale'] = currentLocale.replace(/_/g, '-');\r\n\r\n    // TODO: set HTML lang attribute - https://github.com/ngx-meta/core/issues/32\r\n    // const html = this.document.querySelector('html');\r\n    // html.setAttribute('lang', currentLocale);\r\n\r\n    const elements = this.meta.getTags('property=\"og:locale:alternate\"');\r\n\r\n    elements.forEach((element: any) => {\r\n      this.meta.removeTagElement(element);\r\n    });\r\n\r\n    if (currentLocale && availableLocales)\r\n      availableLocales.split(',')\r\n        .forEach((locale: string) => {\r\n          if (currentLocale.replace(/-/g, '_') !== locale.replace(/-/g, '_'))\r\n            this.meta.addTag({\r\n              property: 'og:locale:alternate',\r\n              content: locale.replace(/-/g, '_')\r\n            });\r\n        });\r\n  }\r\n\r\n  private updateTag(key: string, value: string): void {\r\n    if (key.lastIndexOf('og:', 0) === 0)\r\n      this.meta.updateTag({\r\n        property: key,\r\n        content: key === 'og:locale' ? value.replace(/-/g, '_') : value\r\n      });\r\n    else\r\n      this.meta.updateTag({\r\n        name: key,\r\n        content: value\r\n      });\r\n\r\n    this.isMetaTagSet[key] = true;\r\n\r\n    if (key === 'description')\r\n      this.meta.updateTag({\r\n        property: 'og:description',\r\n        content: value\r\n      });\r\n    else if (key === 'author')\r\n      this.meta.updateTag({\r\n        property: 'og:author',\r\n        content: value\r\n      });\r\n    else if (key === 'publisher')\r\n      this.meta.updateTag({\r\n        property: 'og:publisher',\r\n        content: value\r\n      });\r\n    else if (key === 'og:locale') {\r\n      const availableLocales = this.settings.defaults\r\n        ? this.settings.defaults['og:locale:alternate']\r\n        : '';\r\n\r\n      this.updateLocales(value, availableLocales);\r\n      this.isMetaTagSet['og:locale:alternate'] = true;\r\n    } else if (key === 'og:locale:alternate') {\r\n      const currentLocale = this.meta.getTag('property=\"og:locale\"').content;\r\n\r\n      this.updateLocales(currentLocale, value);\r\n      this.isMetaTagSet['og:locale'] = true;\r\n    }\r\n  }\r\n}\r\n",
    "// libs\r\nimport { Observable } from 'rxjs';\r\n// TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\r\n// import { $$observable as symbolObservable } from 'rxjs/symbol/observable';\r\n\r\nexport function isPromise(obj: any): obj is Promise<any> {\r\n  return !!obj && typeof obj.then === 'function';\r\n}\r\n\r\nexport function isObservable(obj: any | Observable<any>): obj is Observable<any> {\r\n  // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\r\n  // return !!(obj && obj[symbolObservable]);\r\n  return !!obj && typeof obj.subscribe === 'function';\r\n}\r\n",
    "// module\r\nimport { PageTitlePositioning } from './models/page-title-positioning';\r\nimport { MetaSettings } from './models/meta-settings';\r\n\r\nexport abstract class MetaLoader {\r\n  abstract get settings(): MetaSettings;\r\n}\r\n\r\nexport class MetaStaticLoader implements MetaLoader {\r\n  get settings(): MetaSettings {\r\n    return this.providedSettings;\r\n  }\r\n\r\n  constructor(private readonly providedSettings: MetaSettings = {\r\n    pageTitlePositioning: PageTitlePositioning.PrependPageTitle,\r\n    defaults: {}\r\n  }) {\r\n  }\r\n}\r\n",
    "export enum PageTitlePositioning {\r\n  /**\r\n   * append page title after application name\r\n   */\r\n  AppendPageTitle = 0,\r\n  /**\r\n   * prepend page title before application name\r\n   */\r\n  PrependPageTitle = 10\r\n}\r\n"
  ],
  "names": [
    "observableOf",
    "observableFrom"
  ],
  "mappings": ";;;;AKAA,IAAY,oBASX,CATD;AAAA,CAAA,UAAY,oBAAoB,EAAhC;IAIE,oBAAF,CAAA,oBAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,iBAAqB,CAAA;IAInB,oBAAF,CAAA,oBAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,kBAAuB,CAAA;CARvB,EAAY,oBAAoB,KAApB,oBAAoB,GAAhC,EAAA,CAAA,CAAA,CASC;;ADLD,IAAA,UAAA,kBAAA,YAAA;IAEA,SAAA,UAAA,GAAA;KAEA;IAKE,OAAF,UAAA,CAAA;CACA,EAAA,CAAA,CAAA;AACA,AACA,IAAA,gBAAA,kBAAA,YAAA;IAHA,SAAA,gBAA+C,CAA/C,gBAAA,EAA+C;QAI/C,IAAA,gBAAA,KAAA,KAAA,CAAA,EAAA,EAAA,gBAAA,GAAA;YARA,oBAAA,EAAA,oBAAA,CAAA,gBAAA;YACA,QAAgB,EAAhB,EAAA;SACA,CAAA,EAAA;QAOA,IAAA,CAAA,gBAAA,GAAA,gBAAA,CAAA;;;;;;;;;;;;ADbA,SAAA,SAAA,CAA0B,GAAQ,EAAlC;IACE,OAAO,CAAC,CAAC,GAAG,IAAI,OAAO,GAAG,CAAC,IAAI,KAAK,UAAU,CAAC;CAChD;AAED,AAAA,SAAA,YAAA,CAA6B,GAA0B,EAAvD;IAGE,OAAO,CAAC,CAAC,GAAG,IAAI,OAAO,GAAG,CAAC,SAAS,KAAK,UAAU,CAAC;CACrD;;ADCD,IAAA,WAAA,kBAAA,YAAA;IAIE,SAAF,WAC+B,CAD/B,MAE+B,EAF/B,KAAA,EAAA,IAAA,EAAA;QAAuB,IAAvB,CAAA,MAA6B,GAAN,MAAM,CAAY;QACV,IAA/B,CAAA,KAAoC,GAAL,KAAK,CAAO;QACZ,IAA/B,CAAA,IAAmC,GAAJ,IAAI,CAAM;QACrC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;KACxB;IAED,WAAF,CAAA,SAAA,CAAA,QAAA,GAAA,UAAA,KAAA,EAAA,QAAA,EAAA;QACI,IAAJ,KAAA,GAAgB,IAAhB,CAAA;QACA,IAAM,QAAN,KAAA,KAAA,CAAA,EAA2B,EAA3B,QAAA,GAAA,KAAA,CAAA,EAAA;QACA,IAAM,MAAN,GAAA,KAAoB;cAEV,IAAV,CAAA,QAAA,CAAA,KAAA,CAAA;cACAA,EAAA,CAA6B,EAAE,CAA/B,CAAiC;QACjC,MAAA;aAEA,SAAkB,CAAC,UAAnB,GAAA,EAAA;YACA,IAAU,SAAV,GAAA,EAAA,CAAA;YACA,IAAA,CAAA,GAAY,EAAE;gBACd,IAAY,aAAZ,GAAA,CAA6B,KAA7B,CAAA,QAAA,CAAA,QAAA,IAAA,KAAA,CAAA,QAAA,CAAA,QAAA,CAAA,OAAA,CAAA;sBAEA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,QAAA,CAAA,QAAA,CAAA,OAAA,CAAA,CAAA;sBACAA,EAAA,CAAA,EAAA,CAAA,CAAA;gBACA,aAAA;qBACA,SAAA,CAAA,UAAA,YAAA,EAAA;oBACA,IAAA,CAAA,QAAA,IAAA,KAAA,CAAA,QAAA,CAAA,kBAAA,IAAA,KAAA,CAAA,QAAA,CAAA,eAAA;wBACA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,QAAA,CAAA,eAAA,CAAA;6BACA,SAAA,CAAA,UAAA,eAAA,EAAA;4BACA,SAAA,GAAA,eAAA,GAAA,KAAA,CAAA,uBAAA,CAAA,YAAA,EAAA,eAAA,CAAA,GAAA,YAAA,CAAA;4BACA,KAAA,CAAA,WAAA,CAAA,SAAA,CAAA,CAAA;yBACA,CAAA,CAAA;;wBAEA,KAAA,CAAA,WAAA,CAAA,YAAA,CAAA,CAAA;iBAAe,CAAf,CAAiB;aACjB;iBACA,IAAa,CAAb,QAAsB,IAAtB,KAAA,CAAA,QAAA,CAAiD,kBAAjD,IAAA,KAAA,CAAA,QAAA,CAAA,eAAA;gBACA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,QAAA,CAAA,eAAA,CAAA;qBACA,SAAA,CAAA,UAAA,eAAA,EAAA;oBACA,SAAA,GAAA,eAAA,GAAA,KAAA,CAAA,uBAAA,CAAA,GAAA,EAAA,eAAA,CAAA,GAAA,GAAA,CAAA;oBACA,KAAA,CAAA,WAAA,CAAA,SAAA,CAAA,CAAA;iBACA,CAAA,CAAA;;gBAEA,KAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA;SAEA,CAAQ,CAAC;KACT,CAAA;IACA,WAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAA,GAAA,EAAA,KAAA,EAAA;QACA,IAAA,KAAA,GAAA,IAAA,CAAA;QAEI,IAAJ,GAAA,KAAA,OAAuB;YACjB,MAAM,IAAZ,KAAqB,CAAC,iBAAtB,GAAA,GAAA,GAAA,yDAAA;kBACY,4CAAZ,CAAA,CAAA;QAEI,KAAJ,GAAA,KAAA,KAAA,CAAuB,IAAvB,CAA4B,QAA5B,CAAA,QAAA,IAAA,IAAA,CAAA,QAAA,CAAA,QAAA,CAAwE,GAAxE,CAAA;cACQ,IAAI,CAAC,QAAQ,CAAC,QAAtB,CAAA,GAAA,CAAA;cACQ,EAAR,CAAA,CAAA;QAEI,IAAJ,MAAA,GAAA,CAAA,GAAA,KAAA,WAAA,IAAA,GAAA,KAAA,qBAAA;cACA,IAAA,CAAA,QAA6B,CAA7B,KAAA,CAAA;cACAA,EAAsB,CAAC,KAAK,CAA5B,CAAA;QACA,MAAA;aACA,SAAA,CAAA,UAAA,GAAA,EAAA;YAEA,KAAA,CAAA,SAAA,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;SACA,CAAM,CAAC;KACP,CAAA;IACA,WAAA,CAAQ,SAAR,CAAA,MAAwB,GAAxB,UAAA,UAAA,EAAA,YAAA,EAAA;QACA,IAAA,KAAS,GAAT,IAAA,CAAA;QAEA,IAAM,CAAN,YAAmB,EAAnB;YACA,IAAA,aAAA,GAAA,IAAA,CAAA,QAAA,CAAA,QAAA;mBAAA,IAAA,CAAA,QAAA,CAAA,QAAA,CAAA,OAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,iBAAA,CAAA;kBACA,IAAA,CAAA,QAAA,CAAA,iBAAA,CAAA,CAAA;YACA,IAAQ,CAAR,QAAA,CAAA,aAA+B,EAA/B,IAAA,CAAA,CAAA;SAEA;aACO;YAED,IAAI,YAAV,CAAA,QAAA,EAAiC;gBAEjC,IAAA,CAAA,MAAA,CAAA,UAAA,CAAA,CAAA;gBACA,OAAA;aACA;YAEA,IAAU,CAAV,QAAA,CAAA,YAAA,CAAiC,KAAjC,EAAA,YAAoD,CAApD,QAAA,CAAA,CAAA;YACA,MAAA,CAAA,IAAA,CAAA,YAAA,CAAA;iBACA,OAAkB,CAAC,UAAnB,GAAA,EAAA;gBACA,IAAY,KAAK,GAAG,YAApB,CAAiC,GAAjC,CAAA,CAAsC;gBAC5B,IAAI,GAAG,KAAK,OAAtB,IAAA,GAAA,KAAA,UAAmD;oBACvC,OAAZ;qBACA,IAAiB,GAAjB,KAAA,WAAA;oBAEY,KAAZ,GAAA,KAAA,CAAA,OAAA,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;qBACA,IAAA,GAAA,KAAA,qBAAA,EAAA;oBAEc,IAAd,aAAA,GAAkC,YAAlC,CAAA,WAAA,CAAA,CAAA;oBACA,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA,YAAA,CAAA,GAAA,CAAA,CAAA,CAAA;oBACA,OAAA;iBAEa;gBACb,KAAA,CAAA,MAAsB,CAAC,GAAvB,EAAA,KAAA,CAAA,CAAA;aACA,CAAA,CAAA;SACA;QAEA,IAAA,IAAU,CAAV,QAAA,CAAA,QAAA;YACA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,QAAA,CAAA,QAAA,CAAA;iBACA,OAAkB,CAAC,UAAnB,GAAA,EAAA;gBACA,IAAY,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAlC,QAA2C,CAAC,GAA5C,CAAA,CAAA;gBACU,IAAI,CAAC,YAAY,KAA3B,GAAA,IAAA,KAAA,CAAA,YAAA,IAAA,GAAA,IAAA,YAAA,CAAA,KAAA,GAAA,KAAA,OAAA,IAAA,GAAA,KAAA,UAAA;oBACY,OAAZ;qBACA,IAAiB,GAAjB,KAAA,WAAA;oBAEY,KAAZ,GAAA,KAAA,CAAA,OAAA,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;qBACA,IAAA,GAAA,KAAA,qBAAA,EAAA;oBAEc,IAAd,aAAA,GAAkC,YAAlC,GAAA,YAAA,CAAA,WAAA,CAAA,GAAA,SAAA,CAAA;oBACA,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA,KAAA,CAAA,CAAA;oBAEgB,OAAO;iBACvB;gBACA,KAAe,CAAf,MAAA,CAAuB,GAAG,EAA1B,KAAA,CAAA,CAAA;aAES,CAAT,CAAA;QACA,IAAA,GAAA,GAAA,CAAA,CAAA,IAAA,CAAA,QAAA,CAAA,cAAA,IAAA,GAAA,IAAA,UAAA;aAEW,OAAX,CAAA,sBAAA,EAAA,MAAA,CAAA;aACS,OAAT,CAAA,MAAuB,EAAvB,EAA2B,CAAC,CAAC;QAC7B,IAAA,CAAA,MAAA,CAAA,QAAA,EAAA,GAAA,IAAA,GAAA,CAAA,CAAA;KAEA,CAAA;IACA,WAAA,CAAY,SAAS,CAAC,SAAS,GAA/B,UAAA,GAAA,EAAA;QACA,IAAM,CAAN,IAAA,CAAY,SAAS,CAArB,GAAyB,CAAC,CAA1B;KAEA,CAAA;IACA,WAAA,CAAQ,SAAR,CAAA,QAAA,GAAA,UAAA,KAAA,EAAA;QACA,IAAA,IAAA,CAAA,QAAA,CAAA,QAAA,EAA0B;YAC1B,IAAA,MAAY,GAAZ,IAAA,CAAA,QAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CAAA;YAEM,IAAN,CAAA,YAAA,CAAA,MAAA,CAAA;gBACA,OAAA,SAAA,CAAA,MAAA,CAAA;sBAEAC,IAAA,CAAA,MAAA,CAAA;sBACAD,EAAA,CAAA,MAAA,CAAA,CAAA;YAEA,OAAA,MAAA,CAAA;SACA;QACA,OAAAA,EAAA,CAAA,KAAA,CAAA,CAAA;KACA,CAAA;IACA,WAAA,CAAA,SAAA,CAAA,uBAAA,GAAA,UAAA,KAAA,EAAA,eAAA,EAAA;QACA,QAAQ,IAAR,CAAA,QAAA,CAAA,oBAAA;YACM,KAAN,oBAAA,CAAA,eAAA;gBACQ,OAAR,eAAA,GAAA,IAAA,CAAA,QAAA,CAAA,kBAAA,GAAA,KAAA,CAAA;YACA,KAAA,oBAAA,CAAA,gBAAA;gBACA,OAAA,KAAA,GAAA,IAAA,CAAA,QAAA,CAAA,kBAAA,GAAA,eAAA,CAAA;YAEA;gBACA,MAAA,IAAA,KAAA,CAAA,0CAAA,GAAA,IAAA,CAAA,QAAA,CAAA,oBAAA,GAAA,IAAA,CAAA,CAAA;SACA;KACA,CAAA;IACA,WAAA,CAAA,SAAA,CAAoB,WAApB,GAAA,UAAA,KAAA,EAAA;QACA,IAAA,CAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CAAA;QACA,IAAA,CAAA,IAAA,CAAA,SAAA,CAAA;YAEA,QAAA,EAAA,UAAA;YACA,OAAA,EAAiB,KAAjB;SACA,CAAA,CAAA;KACA,CAAA;IAEA,WAAA,CAAA,SAAqB,CAArB,aAAA,GAAsC,UAAU,aAAhD,EAAA,gBAAA,EAAA;QACA,IAAM,KAAK,GAAX,IAAA,CAAmB;QAMf,aAAJ,GAAA,aAAA,KAAsC,IAAtC,CAAA,QAAA,CAAA,QAAA;cAEA,IAAA,CAAA,QAAA,CAAA,QAAA,CAAsC,WAAtC,CAAA;cACA,EAAU,CAAC,CAAX;QACA,IAAA,aAAA,IAAA,IAAA,CAAA,QAAA,CAAA,QAAA;YAEQ,IAAR,CAAA,QAAqB,CAArB,QAAA,CAAA,WAA0C,CAA1C,GAAA,aAAA,CAAA,OAAA,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;QACA,IAAM,QAAN,GAAA,IAAA,CAAsB,IAAtB,CAAA,OAAA,CAAA,gCAAA,CAAA,CAAA;QACA,QAAA,CAAS,OAAO,CAAC,UAAjB,OAAA,EAAA;YACA,KAAA,CAAY,IAAZ,CAAA,gBAAA,CAAA,OAAA,CAA0C,CAA1C;SACA,CAAA,CAAA;QACA,IAAA,aAAA,IAAA,gBAAA;YACA,gBAAA,CAAA,KAAA,CAAA,GAAA,CAA6B;iBAC7B,OAAA,CAAA,UAAA,MAAA,EAAA;gBACA,IAAA,aAAA,CAAA,OAAA,CAAA,IAAA,EAAA,GAAA,CAAA,KAAA,MAAA,CAAA,OAAA,CAAA,IAAA,EAAA,GAAA,CAAA;oBACA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA;wBAE8C,QAA9C,EAAA,qBAAA;wBACA,OAAA,EAA6B,MAA7B,CAAA,OAAA,CAAA,IAAA,EAAA,GAAA,CAAA;qBACe,CAAC,CAAhB;aACA,CAAA,CAAA;KACA,CAAA;IACA,WAAS,CAAT,SAAA,CAAA,SAAA,GAAA,UAAA,GAAA,EAAA,KAAA,EAAA;QACI,IAAI,GAAR,CAAA,WAAA,CAAA,KAAA,EAAA,CAAA,CAAA,KAAA,CAAA;YACM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;gBAClB,QAAR,EAAA,GAAA;gBACQ,OAAO,EAAE,GAAjB,KAAA,WAAA,GAAA,KAAA,CAAA,OAAA,CAAA,IAAA,EAAA,GAAA,CAAA,GAAA,KAAA;aACO,CAAC,CAAC;;YAID,IAAR,CAAA,IAAA,CAAA,SAAA,CAAA;gBACU,IAAV,EAAgB,GAAhB;gBACQ,OAAR,EAAA,KAAA;aACA,CAAA,CAAA;QACA,IAAA,CAAO,YAAP,CAAA,GAAA,CAAA,GAAA,IAAA,CAAA;QACI,IAAI,GAAG,KAAK,aAAa;YACvB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;gBAClB,QAAQ,EAAE,gBAAlB;gBACQ,OAAO,EAAE,KAAK;aACf,CAAC,CAAC;aACA,IAAI,GAAG,KAAK,QAArB;YACM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;gBAClB,QAAQ,EAAE,WAAlB;gBACQ,OAAO,EAAE,KAAK;aACf,CAAC,CAAC;aACA,IAAI,GAAG,KAAK,WAAW;YAC1B,IAAN,CAAA,IAAA,CAAA,SAAA,CAAA;gBACQ,QAAR,EAAA,cAAgC;gBACxB,OAAR,EAAA,KAAA;aAEA,CAAA,CAAA;aACA,IAAW,GAAX,KAAA,WAAA,EAAA;YACA,IAAA,gBAAA,GAAA,IAAA,CAAA,QAAA,CAAA,QAAA;kBAAA,IAAA,CAAA,QAAA,CAAA,QAAA,CAAA,qBAAA,CAAA;kBACY,EAAZ,CAAA;YAEM,IAAI,CAAC,aAAa,CAAC,KAAzB,EAAA,gBAAA,CAAA,CAAA;YACM,IAAI,CAAC,YAAY,CAAC,qBAAxB,CAAA,GAAA,IAAA,CAAA;SACK;aACL,IAAA,GAAA,KAAA,qBAAA,EAAA;;;YA7OC,IAAD,CAAA,YAAA,CAAA,WAAA,CAAA,GAAA,IAAA,CAAA;;;IAJA,OAAA,WAAmB,CAAnB;CAPA,EAAA,CAAA,CAAA;AAAA;;;;;;;;;ADMA,IAAA,SAAA,kBAAA,YAAA;IACE,SAAF,SAAA,CAAA,IAAA,EAAA;QAA+B,IAA/B,CAAA,IAAmC,GAAJ,IAAI,CAAa;KAC7C;IAED,SAAF,CAAA,SAA6C,CAA7C,WAAA,GAAA,UAAA,KAAA,EAAA,KAAA,EAAA;QACI,IAAJ,GAAA,GAAA,KAAA,CAAA,GAAA,CAAA;QAEI,IAAJ,YAAA,GAAA,CAAA,KAAA,IAAA,KAAA,CAAA,IAAA,IAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA;cACQ,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;cAClB,SAAS,CAAC;QAEd,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;QAEpC,OAAO,IAAI,CAAC;KACb,CAAH;IAEE,SAAF,CAAA,SAAA,CAAA,gBAAA,GAAA,UAAA,KAAA,EAAA,KAAA,EAAA;QACI,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;KACvC,CAAH;;;AAnBA;;CAFA,CAAA;;;;;ADUA,SAAA,WAAA,GAAA;IACE,OAAO,IAAI,gBAAgB,EAAE,CAAC;CAC/B;AAGD,AAAA,IAAA,UAAA,kBAAA,YAAA;IAeE,SAAF,UAAA,CAAA,YAAA,EAAA;QACI,IAAI,YAAY;YACd,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;KAC7E;IAjBD,UAAF,CAAA,OAAA,GAAA,UAAA,kBAAA,EAAA;QACI,IAAJ,kBAAA,KAAA,KAAA,CAAA,EAAA,EAAA,kBAAA,GAAA;YACA,OAAA,EAAiB,UAAjB;YACA,UAAA,GAAA,WAAA,CAAA;SACA,CAAA,EAAA;QACA,OAAA;YACM,QAAN,EAAA,UAAA;YACA,SAAA,EAAA;gBACQ,kBAAR;gBACQ,SAAR;gBACA,WAAA;aACA;SACA,CAAA;;;CAdA,EAAA,CAAA,CAAA;;IACA,EAAA,IAAA,EAAa,QAAb,EAAuB;;;;;;;;"
}
